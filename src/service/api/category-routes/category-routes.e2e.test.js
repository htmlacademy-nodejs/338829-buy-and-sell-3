'use strict';

const express = require(`express`);
const request = require(`supertest`);

const categoryRoutes = require(`./category-routes`);
const {CategoryService} = require(`../../data-service`);

const mockData = [
  {
    "id": `Kg-MYi`,
    "title": `Продам камаз или обменяю на Citroen.`,
    "picture": `item11.jpg`,
    "description": `Кажется что это хрупкая вещь. Имеется коробка и все документы. Если есть какие-то вопросы - пишите, на все отвечу :) Если товар не понравится — верну всё до последней копейки.`,
    "type": `SALE`,
    "sum": 22806,
    "category": [`Животные`, `Детские товары`, `Журналы`, `Досуг и развлечения`, `Строительство и ремонт`, `Электроника`, `Книги`, `Посуда`, `Дача, сад и огород`, `Компьютерная техника`, `Бытовая техника`],
    "comments": [
      {"id": `uyMlHh`, "text": `Оплата наличными или перевод на карту? Вы что?! В магазине дешевле.`},
      {"id": `JNt4cp`, "text": `Почему в таком ужасном состоянии?`},
      {"id": `BNs5Ex`, "text": `Неплохо, но дорого. Продаю в связи с переездом. Отрываю от сердца. А сколько игр в комплекте?`},
      {"id": `hQ4ugJ`, "text": `С чем связана продажа? Почему так дешёво?`}
    ]
  },
  {
    "id": `NF_ZYY`,
    "title": `Джинсовые сумки.`,
    "picture": `item07.jpg`,
    "description": `Никаких нареканий или недостатков. Все детали в рабочем состоянии. Кажется что это хрупкая вещь. Две страницы заляпаны свежим кофе.`,
    "type": `OFFER`,
    "sum": 30699,
    "category": [`Спорт и отдых`, `Строительство и ремонт`, `Бизнес и оборудование`, `Бытовая техника`, `Разное`, `Посуда`, `Одежда`, `Игры`, `Компьютерная техника`, `Журналы`, `Досуг и развлечения`, `Электроника`],
    "comments": [
      {"id": `iSlMZ6`, "text": `А где блок питания? Неплохо, но дорого. Вы что?! В магазине дешевле.`},
      {"id": `C7Dw3R`, "text": `Оплата наличными или перевод на карту?`},
      {"id": `exg_fl`, "text": `А где блок питания? С чем связана продажа? Почему так дешёво? Продаю в связи с переездом. Отрываю от сердца.`}
    ]
  }
];

const {HttpCode} = require(`../../../constants`);

const app = express();
app.use(express.json());
categoryRoutes(app, new CategoryService(mockData));

describe(`API должно возвращать список категорий`, () => {
  let response;

  beforeAll(async () => {
    response = await request(app).get(`/categories`);
  });

  test(`Status code 200`, () => {
    expect(response.statusCode).toBe(HttpCode.OK);
  });

  test(`Должен вернуться массив уникальных категорий`, () => {
    expect(response.body).toEqual([
      `Животные`,
      `Детские товары`,
      `Журналы`,
      `Досуг и развлечения`,
      `Строительство и ремонт`,
      `Электроника`,
      `Книги`,
      `Посуда`,
      `Дача, сад и огород`,
      `Компьютерная техника`,
      `Бытовая техника`,
      `Спорт и отдых`,
      `Бизнес и оборудование`,
      `Разное`,
      `Одежда`,
      `Игры`
    ]);
  });
});
